package com.loopback.androidapps.saveapp;

import android.app.Activity;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.app.TimePickerDialog;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.TextView;
import android.widget.TimePicker;

public class ChangeAutogeneratedActivity extends Activity implements
		AdapterView.OnItemSelectedListener, View.OnClickListener {

	private String dateSelected, timeSelected, dateInput, timeInput,
			dateTimeInput, addressSelected;

	private TextView txtAccount, txtDate, txtTime, txtLatitude, txtLongitude,
			txtChangeAddress;
	private Button btnChangeDate, btnChangeTime, btnChangeAddress, btnDiscard,
			btnSave;
	private double latitudeSelected, longitudeSelected;
	private AddressX address;
	private Integer receivedId, addressId;
	static final int DATE_DIALOG_ID = 0, TIME_DIALOG_ID = 1;
	private boolean hasBeenChanged;
	private SaveApp saveApp;

	/*------------------------------------------------------------------------------------------------
	 *-------------------------------------- ON CREATE --------------------------------------------------
	 *------------------------------------------------------------------------------------------------ */

	public void onCreate(Bundle savedInstanceState) {
		Log.i("CHA", "Init.");
		super.onCreate(savedInstanceState);
		setContentView(R.layout.changedateaddress);

		loadActivity();
	}

	/*------------------------------------------------------------------------------------------------
	 *--------------------------------------  LOAD ACTIVITY --------------------------------------------------
	 *------------------------------------------------------------------------------------------------ */

	public void loadActivity() {
		saveApp = ((SaveApp) getApplicationContext());

		Log.i("CHA", "Loading...");

		txtAccount = (TextView) findViewById(R.id.txtAccount);
		txtDate = (TextView) findViewById(R.id.txtDate);
		txtTime = (TextView) findViewById(R.id.txtTime);
		txtLatitude = (TextView) findViewById(R.id.txtLatitude);
		txtLongitude = (TextView) findViewById(R.id.txtLongitude);
		btnChangeDate = (Button) findViewById(R.id.btnChangeDate);
		btnChangeTime = (Button) findViewById(R.id.btnChangeTime);
		btnChangeAddress = (Button) findViewById(R.id.btnChangeAddress);
		btnDiscard = (Button) findViewById(R.id.btnDiscard);
		btnSave = (Button) findViewById(R.id.btnSave);
		txtChangeAddress = (TextView) findViewById(R.id.txtChangeAddress);

		btnChangeDate.setOnClickListener(this);
		btnChangeTime.setOnClickListener(this);
		btnChangeAddress.setOnClickListener(this);
		btnSave.setOnClickListener(this);
		btnDiscard.setOnClickListener(this);

		Log.i("CHA", "Loading...");

	}

	public void onResume() {
		super.onResume();
		Bundle bundle = this.getIntent().getExtras();

		receivedId = bundle.getInt("Id");
		/*--------------------------------------FROM MAP-----------------------------------------*/
		hasBeenChanged = bundle.getBoolean("HasBeenChanged");
		if (hasBeenChanged) {
			addressSelected = bundle.getString("AddressDesc");
			latitudeSelected = bundle.getDouble("Latitude");
			longitudeSelected = bundle.getDouble("Longitude");
			txtChangeAddress.setText(addressSelected);
			saveApp.outlay.setAddressDesc(addressSelected);
			saveApp.setLatitude(latitudeSelected);
			saveApp.setLongitude(longitudeSelected);
			txtChangeAddress.setText(addressSelected);
			txtLatitude.setText(String.valueOf(latitudeSelected));
			txtLongitude.setText(String.valueOf(longitudeSelected));
			txtDate.setText((Utilities.printDate(saveApp.outlay.getDate())
					.subSequence(0, 10)));
			txtTime.setText(saveApp.outlay.getDate().subSequence(11, 16));

		} else {

			/*--------------------------------------FROM EDIT Trough DETAIL-----------------------------------------*/
			if (receivedId > 0) {
				Outlay outlay = new Outlay(receivedId);
				saveApp.setDate(outlay.getDate());
				txtDate.setText((Utilities.printDate(outlay.getDate())
						.subSequence(0, 10)));
				txtTime.setText((outlay.getDate()).subSequence(11, 16));
				txtChangeAddress.setText(outlay.getAddressDesc());
				address = new AddressX(outlay.getAddressId());
				txtLatitude.setText(String.valueOf(address.getLatitude()));
				txtLongitude.setText(String.valueOf(address.getLongitude()));
				// Keep original values for result
				addressSelected = outlay.getAddressDesc();
				dateTimeInput = outlay.getDate();
				latitudeSelected = address.getLatitude();
				longitudeSelected = address.getLongitude();

				/*--------------------------------------FROM EDIT Trough HOME-----------------------------------------*/
			} else {
				txtDate.setText((Utilities.printDate(Utilities.dateGetter())
						.subSequence(0, 10)));
				txtTime.setText((Utilities.dateGetter()).subSequence(11, 16));
				txtChangeAddress.setText(saveApp.getAddressDesc());
				txtLatitude.setText(String.valueOf(saveApp.getLatitude()));
				txtLongitude.setText(String.valueOf(saveApp.getLongitude()));
				// Keep original values for result
				addressSelected = saveApp.getAddressDesc();
				dateTimeInput = saveApp.getDate();
				latitudeSelected = saveApp.getLatitude();
				longitudeSelected = saveApp.getLongitude();
			}
			dateInput = (String) txtDate.getText();
			timeInput = (String) txtTime.getText();

			txtAccount.setText(getString(R.string.strAccount) + ": "
					+ saveApp.getAccountDesc());

			Log.i("CHA", "Loaded");
		}

	}

	/*------------------------------------------------------------------------------------------------
	 *--------------------------------------  BUTTONS --------------------------------------------------
	 *------------------------------------------------------------------------------------------------ */

	public void onBackPressed() {
		Log.i("CHA", "Back Cklicked");
		Bundle bundle = new Bundle();
		bundle.putBoolean("IsAdding", saveApp.isAdding());
		Intent intent = new Intent(this.getApplicationContext(),
				OutlayEditActivity.class);
		intent.putExtras(bundle);
		startActivity(intent);
	}

	public void onClick(View v) {
		Log.i("CHA", "Clicked");
		// DATE
		if (v == btnChangeDate) {
			dateInput = (String) txtDate.getText();
			showDialog(DATE_DIALOG_ID);

			// TIME
		} else if (v == btnChangeTime) {
			timeInput = (String) txtTime.getText();
			showDialog(TIME_DIALOG_ID);

			// ADDRESS
		} else if (v == btnChangeAddress) {
			dateInput = (String) txtDate.getText();
			timeInput = (String) txtTime.getText();
			dateTimeInput = (dateInput + " " + timeInput);
			saveApp.setDate(dateTimeInput);
			Bundle bundle = new Bundle();
			bundle.putInt("Id", receivedId);
			Intent intent = new Intent(this.getApplicationContext(),
					MapAddressSelectionActivity.class);
			intent.putExtras(bundle);
			startActivity(intent);

			// SAVE
		} else if (v == btnSave) {
			dateInput = (String) txtDate.getText();
			timeInput = (String) txtTime.getText();
			dateTimeInput = (dateInput + " " + timeInput);
			saveApp.outlay.setDate(dateTimeInput);
			saveApp.outlay.setAddressDesc(addressSelected);
			AddressX address = new AddressX();
			addressId = address.insertOrGetId(addressSelected);
			address.inflate(addressId);
			if (address.getLatitude() == 0) {
				address.setLatitude(Double.valueOf(latitudeSelected));
				address.setLongitude(Double.valueOf(longitudeSelected));
				address.update();
			}

			Bundle bundle = new Bundle();
			bundle.putBoolean("HasChanges", true);
			bundle.putInt("Id", receivedId);
			bundle.putString("Date", dateTimeInput);
			bundle.putInt("AddressId", addressId);
			bundle.putString("AddressDesc", addressSelected);
			bundle.putDouble("Latitude", latitudeSelected);
			bundle.putDouble("Longitude", longitudeSelected);

			Intent intent = new Intent(this.getApplicationContext(),
					OutlayEditActivity.class);
			intent.putExtras(bundle);
			startActivity(intent);

			// DISCARD
		} else if (v == btnDiscard) {
			Bundle bundle = new Bundle();
			bundle.putBoolean("HasChanges", false);
			bundle.putInt("Id", receivedId);
			Intent intent = new Intent(this.getApplicationContext(),
					OutlayEditActivity.class);
			intent.putExtras(bundle);
			startActivity(intent);
		}
	}

	// UNIMPLEMETED
	public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2,
			long arg3) {
		// TODO Auto-generated method stub

	}

	public void onNothingSelected(AdapterView<?> arg0) {
		// TODO Auto-generated method stub

	}

	/*------------------------------------------------------------------------------------------------
	 *--------------------------------------  DATE PICKER --------------------------------------------------
	 *------------------------------------------------------------------------------------------------ */

	// DATE PICKER
	public DatePickerDialog.OnDateSetListener mDateSetListener = new DatePickerDialog.OnDateSetListener() {
		// onDateSet method
		public void onDateSet(DatePicker view, int year, int monthOfYear,
				int dayOfMonth) {
			Log.i("CHA", "Date Picker");
			dateSelected = Utilities.formatDate(year, monthOfYear, dayOfMonth,
					0, 0);
			txtDate.setText(Utilities.printDate(dateSelected)
					.subSequence(0, 10));
		}
	};

	/*------------------------------------------------------------------------------------------------
	 *--------------------------------------  TIME PICKER --------------------------------------------------
	 *------------------------------------------------------------------------------------------------ */
	private TimePickerDialog.OnTimeSetListener mTimeSetListener = new TimePickerDialog.OnTimeSetListener() {
		public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
			Log.i("CHA", "Time Picker");
			timeSelected = String.format("%02d", hourOfDay) + ':'
					+ String.format("%02d", minute);
			txtTime.setText(timeSelected);
		}
	};

	/*------------------------------------------------------------------------------------------------
	 *--------------------------------------  DIALOG --------------------------------------------------
	 *------------------------------------------------------------------------------------------------ */
	protected Dialog onCreateDialog(int id) {
		Log.i("CHA", "Dialog");
		int year, month, day, hour, minute;
		if (dateInput.substring(0, 1).equals("N")) {
			year = 2012;
			month = 0;
			day = 1;
			hour = 0;
			minute = 0;
		} else {
			year = Integer.valueOf(Utilities.getDateUnit(dateInput, 'y'));
			month = Integer.valueOf(Utilities.getDateUnit(dateInput, 'M')) - 1;
			day = Integer.valueOf(Utilities.getDateUnit(dateInput, 'd'));
			hour = Integer.valueOf((String) timeInput.subSequence(0, 2));
			minute = Integer.valueOf((String) timeInput.subSequence(3, 5));
		}
		switch (id) {
		case DATE_DIALOG_ID:
			return new DatePickerDialog(this, mDateSetListener, year, month,
					day);

		case TIME_DIALOG_ID:
			return new TimePickerDialog(this, mTimeSetListener, hour, minute,
					false);
		}
		return null;
	}

}